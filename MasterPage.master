<%@ Master Language="C#" AutoEventWireup="true" CodeFile="MasterPage.master.cs" Inherits="MasterPage" %>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <link rel="stylesheet" type="text/css" href="PVTCommon/css/Master1.css" />
    
    <!-- jquery tree control css and js starts-->
    <link rel="stylesheet" href="PVTCommon/css/jquery.treeview.css" />
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js"></script>
    <script src="PVTCommon/js/jquery.treeview.js" type="text/javascript"></script>
    <script src="PVTCommon/js/jquery.cookie.js" type="text/javascript"></script>
    <script src="PVTCommon/js/demo.js" type="text/javascript"></script>
    <!-- jquery tree control css and js ends-->

    
    <script language="javascript" type="text/javascript">
        var offset = 15; //Distance between tooltip and cursor
        var fadeInSpeed = 600; //Speed of the Fade-IN effect in milliseconds
        var fadeOutSpeed = 200; //Speed of the Fade-OUT effect in milliseconds
        var clearQueue = true; //If set to false, if you hover over many elements fast, the events will stack up
        var gotoEnd = true; //If set to false, if you hover over many elements fast, the events will stack up

        function overthis(obj) {
            var selector = "#" + $(obj).attr('tooltip');
            $(selector).fadeIn(250, function () { });
        }

        function outthis(obj) {
            var selector = "#" + $(obj).attr('tooltip');
            $(selector).fadeOut(fadeOutSpeed, function () { });
        }
    </script>
    <!-- 
   Using the Google Maps API 3, so a key is no longer necessary. In previous versions the API key was inserted as a 
   querystring into the script reference but not anymore. This means you don’t have to apply for a new API key for every domain 
   you want to map to. It also means that the URI to the API is a lot shorter. So the only thing you have to tell, while referencing 
   the API, is whether your device has a sensor or not. sensor=false if you don’t have a sensor and sensor=true if you do. A sensor is 
   a way to determine your present location, like a GPS device. This information is attached as querystring to the end of the URI.
   -->
    <script type="text/javascript"
        src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script type="text/javascript"
        src="PVTCommon/js/MarkerCluster.js">
    </script>

    <script type="text/javascript">

        function precache(src) {
            var img = new Image();
            img.src = src;
        }

        var _rule1 = "1 point more than 3.00 standard deviations from center line";
        var _rule2 = "9 points in a row on same side of center line";
        var _rule3 = "6 points in a row, all increasing or all decreasing";
        //var _iconGreen = "http://www.google.com/intl/en_us/mapfiles/ms/micons/green-dot.png";
        //var _iconRed = "http://www.google.com/intl/en_us/mapfiles/ms/micons/red-dot.png";
        var _iconGreen = "PVTCommon/images/green-bldg.png";
        var _iconRed = "PVTCommon/images/red-bldg.png";
        var _iconGreenCluster = "PVTCommon/images/green-cluster.png";
        var _iconRedCluster = "PVTCommon/images/red-cluster.png";

        //pre-cache
        //precache("http://www.google.com/intl/en_us/mapfiles/ms/micons/green-dot.png");
        //precache("http://www.google.com/intl/en_us/mapfiles/ms/micons/red-dot.png");
        precache("PVTCommon/images/green-bldg.png");
        precache("PVTCommon/images/red-bldg.png");
        precache("PVTCommon/images/green-cluster.png");
        precache("PVTCommon/images/red-cluster.png");

        //var markersArrayCoachella = [];
        //var markersArrayWLA = [];
        var markersArrayWestVentura_Emergency_Professional = [];
        var markersArrayWestVentura_Referral_Professional = [];
        var markersArrayWestVentura_Emergency_Hospital = [];
        var markersArrayWestVentura_Referral_Hospital = [];
        var markersArrayWoodlandHills_Emergency_Professional = [];
        var markersArrayWoodlandHills_Referral_Professional = [];
        var markersArrayWoodlandHills_Emergency_Hospital = [];
        var markersArrayWoodlandHills_Referral_Hospital = [];

        var markerCluster = null;
        function initialize(latlngarr) {

            //Geological Center for California
            var latlng = new google.maps.LatLng("36.17", "-119.7462");
            var myOptions = {
                zoom: 5,
                center: latlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            var map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

            return map;
        }

        function attachClickEvent(marker, profile) {
            google.maps.event.addListener(marker, 'click', function () {
                var mydiv = document.getElementById("divProfile");

                mydiv.style.display = "";
                document.getElementById("lblName").focus();
                document.getElementById("lblName").innerHTML = profile.Name;
                document.getElementById("lblAddress").innerHTML = profile.Address;
                document.getElementById("lblPhone").innerHTML = profile.Phone;
                document.getElementById("lblTIN").innerHTML = profile.TIN;
                document.getElementById("lblSUFFIX").innerHTML = profile.SUFFIX;
                document.getElementById("lblMSA").innerHTML = profile.MSA;
                document.getElementById("lblContracted").innerHTML = (profile.Contracted) ? "Contracted Provider" : "";

                var tbl = document.getElementById("tblProfile");

                while (tbl.rows.length > 0) {
                    tbl.deleteRow(0);
                }

                if (tbl != null) {
                    var tr = tbl.insertRow(-1);

                    var td = tr.insertCell(-1);
                    td.innerHTML = "<b>Metric</b>";

                    td = tr.insertCell(-1);
                    td.innerHTML = "<b>YTD - " + profile.CurrentYear + "</b>";

                    td = tr.insertCell(-1);
                    td.innerHTML = "<b>YTD - " + profile.PreviousYear + "</b>";

                    td = tr.insertCell(-1);
                    td.innerHTML = "<b>Y/Y Change</b>";

                    td = tr.insertCell(-1);
                    td.innerHTML = "<b>Threshold</b>";

                    td = tr.insertCell(-1);
                    td.innerHTML = "<b>YoY Threshold</b>";

                    td = tr.insertCell(-1);
                    td.innerHTML = "<b>In Control?</b>";

                    //td = tr.insertCell(-1);
                    //td.innerHTML = "<b>Cost Center</b>";

                    //td = tr.insertCell(-1);
                    //td.innerHTML = "<b>Report Details</b>";

                    for (var i = 0; i < profile.MetricList.length; i++) {
                        tr = tbl.insertRow(-1);

                        td = tr.insertCell(-1);
                        td.innerHTML = profile.MetricList[i].displayname;

                        td = tr.insertCell(-1);
                        if (profile.MetricList[i].currentvalue == null) {
                            td.innerHTML = "&nbsp;";
                        }
                        /*
                        // 3/28/2012: Suffixes zeroed out per Danny. Join on TIN9 and MSA.
                        else if (profile.MetricList[i].currentvalue.incontrol != null && !profile.MetricList[i].currentvalue.incontrol) {
                        td.innerHTML = "<a style=\"color:red;\" href=\"ChartMetric.aspx?tin=" + profile.TIN + "&suffix=" + profile.SUFFIX + "&charttype=" + profile.MetricList[i].columnname + "\" target=\"_blank\">" + profile.MetricList[i].currentvalue.displayvalue + "</a>";
                        }
                        else {
                        td.innerHTML = "<a href=\"ChartMetric.aspx?tin=" + profile.TIN + "&suffix=" + profile.SUFFIX + "&charttype=" + profile.MetricList[i].columnname + "\" target=\"_blank\">" + profile.MetricList[i].currentvalue.displayvalue + "</a>";
                        }
                        */
                        else if (profile.MetricList[i].currentvalue.incontrol != null && !profile.MetricList[i].currentvalue.incontrol) {
                            td.innerHTML = "<a style=\"color:red;\" href=\"ChartMetric.aspx?tin=" + profile.TIN + "&msa=" + profile.MSA + "&charttype=" + profile.MetricList[i].columnname + "\" target=\"_blank\">" + profile.MetricList[i].currentvalue.displayvalue + "</a>";
                        }
                        else {
                            td.innerHTML = "<a href=\"ChartMetric.aspx?tin=" + profile.TIN + "&msa=" + profile.MSA + "&charttype=" + profile.MetricList[i].columnname + "\" target=\"_blank\">" + profile.MetricList[i].currentvalue.displayvalue + "</a>";
                        }

                        td = tr.insertCell(-1);
                        if (profile.MetricList[i].previousvalue == null) {
                            td.innerHTML = "&nbsp;";
                        }
                        else {
                            /*if (profile.MetricList[i].previousvalue.incontrol != null && !profile.MetricList[i].previousvalue.incontrol) {
                            td.style.color = "red";
                            }*/
                            td.innerHTML = profile.MetricList[i].previousvalue.displayvalue;
                        }

                        td = tr.insertCell(-1);
                        if (profile.MetricList[i].difference == null) {
                            td.innerHTML = "&nbsp;";
                        }
                        else {
                            if (profile.MetricList[i].difference.incontrol != null && !profile.MetricList[i].difference.incontrol) {
                                td.style.color = "red";
                            }
                            td.innerHTML = profile.MetricList[i].difference.displayvalue;
                        }

                        td = tr.insertCell(-1);
                        td.innerHTML = "";

                        for (var tcount = 0; tcount < profile.MetricList[i].thresholds.length; tcount++) {
                            if (profile.MetricList[i].thresholds[tcount].ThresholdType == 1) {
                                td.innerHTML += profile.MetricList[i].thresholds[tcount].Threshold;
                            }
                        }
                        if (td.innerHTML == "") {
                            td.innerHTML = "N/A";
                        }

                        td = tr.insertCell(-1);
                        td.innerHTML = "";

                        for (tcount = 0; tcount < profile.MetricList[i].thresholds.length; tcount++) {
                            if (profile.MetricList[i].thresholds[tcount].ThresholdType == 2) {
                                td.innerHTML += profile.MetricList[i].thresholds[tcount].Threshold;
                            }
                        }
                        if (td.innerHTML == "") {
                            td.innerHTML = "N/A";
                        }

                        td = tr.insertCell(-1);
                        td.innerHTML = (profile.MetricList[i].incontrolrule) ? "yes" : "no";
                        if (profile.MetricList[i].incontrolrule == false) {
                            var rulestr = "";
                            if (profile.MetricList[i].incontrolrule1 == false) {
                                rulestr += "<li>" + _rule1 + "</li>";
                            }
                            if (profile.MetricList[i].incontrolrule2 == false) {
                                rulestr += "<li>" + _rule2 + "</li>";
                            }
                            if (profile.MetricList[i].incontrolrule3 == false) {
                                rulestr += "<li>" + _rule3 + "</li>";
                            }
                            td.innerHTML = "<div onmouseover='overthis(this);' onmouseout='outthis(this);' class='hastooltip' tooltip='footnote" + profile.MetricList[i].columnname + "'>" + td.innerHTML + "</div><div class='floating' id='footnote" + profile.MetricList[i].columnname + "'>" + rulestr + "</div>";
                        }

                        // Report Details link 
                        /*
                        if (profile.MetricList[i].currentvalue == null) {
                        td.innerHTML = "&nbsp;";
                        }       
                        else if (profile.MetricList[i].displayname != null && profile.MetricList[i].displayname =="Paid to Bill Ratio") {
                        td.innerHTML = "<a href=\"http://csdbbcarp008/reportserver?/Data_Analysis/Claims_Reduction_Billed_Charges_Per_Provider&rs:Command=Render&ProviderId=" + profile.TIN + profile.SUFFIX + "\" target=\"_blank\">" + "Claims Reduction</a>";                   
                        }
                        else {
                        td.innerHTML = "&nbsp;";
                        }
                        */
                    }
                }

                document.getElementById("agmap").style.display = "";
                //document.getElementById("aprofile").style.display = "";
                document.location.href = "#profile";

            });
        }

        function attachMouseOverEvent(map, marker, infowindow) {
            google.maps.event.addListener(marker, 'mouseover', function () {
                infowindow.open(map, marker);

            });
        }

        function attachMouseOutEvent(map, marker, infowindow) {
            google.maps.event.addListener(marker, 'mouseout', function () {
                infowindow.close(map, marker);

            });
        }

        function PopulateMarkerArray(markersArray, msa) {
            if (markersArray.length == 0) {
                for (var i = 0; i < latlngarr.length; i++) {
                    if (msa == latlngarr[i].MSA) {
                        var marker = new google.maps.Marker({
                            position: new google.maps.LatLng(latlngarr[i].Lat, latlngarr[i].Lng),
                            id: latlngarr[i].TIN + latlngarr[i].SUFFIX,
                            title: latlngarr[i].Name,
                            msa: latlngarr[i].MSA,
                            icon: latlngarr[i].MarkerIcon,
                            metriclist: latlngarr[i].MetricList,
                            infocontent: latlngarr[i].Name + "<br>" + latlngarr[i].Address + "<br>" + latlngarr[i].Phone + "<br>" + latlngarr[i].TIN + '-' + latlngarr[i].SUFFIX,
                            filtered: false
                        });

                        markersArray.push(marker);

                        attachClickEvent(marker, latlngarr[i]);

                        var infowindow = new google.maps.InfoWindow(
                            { content: latlngarr[i].Name + "<br>" + latlngarr[i].Address + "<br>" + latlngarr[i].Phone + "<br>" + latlngarr[i].TIN + '-' + latlngarr[i].SUFFIX,
                                size: new google.maps.Size(50, 50)
                            });

                        attachMouseOverEvent(map, marker, infowindow);
                        attachMouseOutEvent(map, marker, infowindow);
                    }

                }
            }
        }

        function ClearMap(msa) {
            if (markerCluster != null) {
                markerCluster.clearMarkers();
            }

            //            if (msa == "" || msa == "WLA") {
            //                for (var i = 0; i < markersArrayCoachella.length; i++) {
            //                    markersArrayCoachella[i].setMap(null);
            //                }
            //            }

            //            if (msa == "" || msa == "Coachella_Valley") {
            //                for (var i = 0; i < markersArrayWLA.length; i++) {
            //                    markersArrayWLA[i].setMap(null);
            //                }
            //            }

            if (msa == "" || msa == "West_Ventura_Emergency_Professional") {
                for (var i = 0; i < markersArrayWestVentura_Emergency_Professional.length; i++) {
                    markersArrayWestVentura_Emergency_Professional[i].setMap(null);
                }
            }

            if (msa == "" || msa == "West_Ventura_Referral_Professional") {
                for (var i = 0; i < markersArrayWestVentura_Referral_Professional.length; i++) {
                    markersArrayWestVentura_Referral_Professional[i].setMap(null);
                }
            }

            if (msa == "" || msa == "West_Ventura_Emergency_Hospital") {
                for (var i = 0; i < markersArrayWestVentura_Emergency_Hospital.length; i++) {
                    markersArrayWestVentura_Emergency_Hospital[i].setMap(null);
                }
            }

            if (msa == "" || msa == "West_Ventura_Referral_Hospital") {
                for (var i = 0; i < markersArrayWestVentura_Referral_Hospital.length; i++) {
                    markersArrayWestVentura_Referral_Hospital[i].setMap(null);
                }
            }

            if (msa == "" || msa == "Woodland_Hills_Emergency_Professional") {
                for (var i = 0; i < markersArrayWoodlandHills_Emergency_Professional.length; i++) {
                    markersArrayWoodlandHills_Emergency_Professional[i].setMap(null);
                }
            }

            if (msa == "" || msa == "Woodland_Hills_Referral_Professional") {
                for (var i = 0; i < markersArrayWoodlandHills_Referral_Professional.length; i++) {
                    markersArrayWoodlandHills_Referral_Professional[i].setMap(null);
                }
            }

            if (msa == "" || msa == "Woodland_Hills_Emergency_Hospital") {
                for (var i = 0; i < markersArrayWoodlandHills_Emergency_Hospital.length; i++) {
                    markersArrayWoodlandHills_Emergency_Hospital[i].setMap(null);
                }
            }

            if (msa == "" || msa == "Woodland_Hills_Referral_Hospital") {
                for (var i = 0; i < markersArrayWoodlandHills_Referral_Hospital.length; i++) {
                    markersArrayWoodlandHills_Referral_Hospital[i].setMap(null);
                }
            }
        }

        /*function getcenter() {
        alert(map.getCenter().lat());
        alert(map.getCenter().lng());
        }*/

        function ReDraw(ddlmsaid) {
            var usecluster = (document.getElementById("chkUseCluster") != null) ? document.getElementById("chkUseCluster").checked : false;
            var ddlmsa = document.getElementById(ddlmsaid);
            var greenmarker = "";
            var redmarker = "";

            if (ddlmsa != null && ddlmsa.selectedIndex >= 0) {
                //alert(ddlmsa.options[ddlmsa.selectedIndex].value);
                var msa = ddlmsa.options[ddlmsa.selectedIndex].value;
                var markersArray = [];

                //                if (msa == "Coachella_Valley") {
                //                    map.setZoom(10);
                //                    map.setCenter(new google.maps.LatLng("33.75362", "-116.33341"));
                //                    PopulateMarkerArray(markersArrayCoachella, msa);
                //                    markersArray = markersArrayCoachella;
                //                    ClearMap("Coachella_Valley");
                //                }
                //                else if (msa == "WLA") {
                //                    map.setZoom(10);
                //                    map.setCenter(new google.maps.LatLng("34.04882", "-118.109097"));
                //                    PopulateMarkerArray(markersArrayWLA, msa);
                //                    markersArray = markersArrayWLA;
                //                    ClearMap("WLA");
                //                }
                //                else if (msa == "West_Ventura") {
                //                    map.setZoom(10);
                //                    map.setCenter(new google.maps.LatLng("34.28", "-119.168"));
                //                    PopulateMarkerArray(markersArrayWestVentura, msa);
                //                    markersArray = markersArrayWestVentura;
                //                    ClearMap("West_Ventura");
                //                }

                if (msa == "West_Ventura_Emergency_Professional") {
                    map.setZoom(7);
                    map.setCenter(new google.maps.LatLng("34.28", "-119.168"));
                    PopulateMarkerArray(markersArrayWestVentura_Emergency_Professional, msa);
                    markersArray = markersArrayWestVentura_Emergency_Professional;
                    ClearMap("West_Ventura_Emergency_Professional");
                }
                else if (msa == "West_Ventura_Referral_Professional") {
                    map.setZoom(7);
                    map.setCenter(new google.maps.LatLng("34.28", "-119.168"));
                    PopulateMarkerArray(markersArrayWestVentura_Referral_Professional, msa);
                    markersArray = markersArrayWestVentura_Referral_Professional;
                    ClearMap("West_Ventura_Referral_Professional");
                }
                else if (msa == "West_Ventura_Emergency_Hospital") {
                    map.setZoom(7);
                    map.setCenter(new google.maps.LatLng("34.28", "-119.168"));
                    PopulateMarkerArray(markersArrayWestVentura_Emergency_Hospital, msa);
                    markersArray = markersArrayWestVentura_Emergency_Hospital;
                    ClearMap("West_Ventura_Emergency_Hospital");
                }
                else if (msa == "West_Ventura_Referral_Hospital") {
                    map.setZoom(7);
                    map.setCenter(new google.maps.LatLng("34.28", "-119.168"));
                    PopulateMarkerArray(markersArrayWestVentura_Referral_Hospital, msa);
                    markersArray = markersArrayWestVentura_Referral_Hospital;
                    ClearMap("West_Ventura_Referral_Hospital");
                }
                else if (msa == "Woodland_Hills_Emergency_Professional") {
                    map.setZoom(7);
                    map.setCenter(new google.maps.LatLng("34.90", "-118.36"));
                    PopulateMarkerArray(markersArrayWoodlandHills_Emergency_Professional, msa);
                    markersArray = markersArrayWoodlandHills_Emergency_Professional;
                    ClearMap("Woodland_Hills_Emergency_Professional");
                }
                else if (msa == "Woodland_Hills_Referral_Professional") {
                    map.setZoom(7);
                    map.setCenter(new google.maps.LatLng("34.90", "-118.36"));
                    PopulateMarkerArray(markersArrayWoodlandHills_Referral_Professional, msa);
                    markersArray = markersArrayWoodlandHills_Referral_Professional;
                    ClearMap("Woodland_Hills_Referral_Professional");
                }
                else if (msa == "Woodland_Hills_Emergency_Hospital") {
                    map.setZoom(7);
                    map.setCenter(new google.maps.LatLng("34.90", "-118.36"));
                    PopulateMarkerArray(markersArrayWoodlandHills_Emergency_Hospital, msa);
                    markersArray = markersArrayWoodlandHills_Emergency_Hospital;
                    ClearMap("Woodland_Hills_Emergency_Hospital");
                }
                else if (msa == "Woodland_Hills_Referral_Hospital") {
                    map.setZoom(7);
                    map.setCenter(new google.maps.LatLng("34.90", "-118.36"));
                    PopulateMarkerArray(markersArrayWoodlandHills_Referral_Hospital, msa);
                    markersArray = markersArrayWoodlandHills_Referral_Hospital;
                    ClearMap("Woodland_Hills_Referral_Hospital");
                }
                else {
                    map.setZoom(5);
                    map.setCenter(new google.maps.LatLng("36.17", "-119.7462"));
                    ClearMap("");
                }

                for (var i = 0; i < markersArray.length; i++) {
                    var showmarker = true;
                    markersArray[i].icon = _iconGreen;
                    markersArray[i].filtered = false;
                    for (var j = 0; j < markersArray[i].metriclist.length; j++) {
                        for (var k = 0; k < markersArray[i].metriclist[j].thresholds.length; k++) {
                            //var chk = document.getElementById("chk" + markersArray[i].metriclist[j].columnname + markersArray[i].metriclist[j].thresholds[k].ThresholdType);
                            //NOTE: Remember to change this manually when changing master page layout. In case it breaks, check how checkbox names are prepended.
                            var chk = document.getElementById("ContentPlaceHolder1_chk" + markersArray[i].metriclist[j].columnname + markersArray[i].metriclist[j].thresholds[k].ThresholdType);
                            try {
                                if (chk != null && chk.checked && !markersArray[i].metriclist[j].thresholds[k].InControl) {
                                    //showmarker = false;
                                    markersArray[i].icon = _iconRed;
                                    markersArray[i].filtered = true;
                                }
                            }
                            catch (err) { }
                        }
                    }

                    if (!usecluster) {
                        markersArray[i].setMap(map);
                    }
                }

                if (usecluster) {
                    //markerCluster = null;
                    //                    if (msa == "Coachella_Valley") {
                    //                        markerCluster = new MarkerClusterer(map, markersArrayCoachella, { gridSize: 4, styles: [{ filteredurl: _iconRedCluster, url: _iconGreenCluster, height: 38, width: 32, backgroundPosition: "left bottom"}] });
                    //                    }
                    //                    else if (msa == "WLA") {
                    //                        markerCluster = new MarkerClusterer(map, markersArrayWLA, { gridSize: 4, styles: [{ filteredurl: _iconRedCluster, url: _iconGreenCluster, height: 38, width: 32, backgroundPosition: "left bottom"}] });
                    //                    }
                    if (msa == "West_Ventura_Emergency_Professional") {
                        markerCluster = new MarkerClusterer(map, markersArrayWestVentura_Emergency_Professional, { gridSize: 4, styles: [{ filteredurl: _iconRedCluster, url: _iconGreenCluster, height: 38, width: 32, backgroundPosition: "left bottom"}] });
                    }
                    else if (msa == "West_Ventura_Referral_Professional") {
                        markerCluster = new MarkerClusterer(map, markersArrayWestVentura_Referral_Professional, { gridSize: 4, styles: [{ filteredurl: _iconRedCluster, url: _iconGreenCluster, height: 38, width: 32, backgroundPosition: "left bottom"}] });
                    }
                    else if (msa == "West_Ventura_Emergency_Hospital") {
                        markerCluster = new MarkerClusterer(map, markersArrayWestVentura_Emergency_Hospital, { gridSize: 4, styles: [{ filteredurl: _iconRedCluster, url: _iconGreenCluster, height: 38, width: 32, backgroundPosition: "left bottom"}] });
                    }
                    else if (msa == "West_Ventura_Referral_Hospital") {
                        markerCluster = new MarkerClusterer(map, markersArrayWestVentura_Referral_Hospital, { gridSize: 4, styles: [{ filteredurl: _iconRedCluster, url: _iconGreenCluster, height: 38, width: 32, backgroundPosition: "left bottom"}] });
                    }
                    else if (msa == "Woodland_Hills_Emergency_Professional") {
                        markerCluster = new MarkerClusterer(map, markersArrayWoodlandHills_Emergency_Professional, { gridSize: 4, styles: [{ filteredurl: _iconRedCluster, url: _iconGreenCluster, height: 38, width: 32, backgroundPosition: "left bottom"}] });
                    }
                    else if (msa == "Woodland_Hills_Referral_Professional") {
                        markerCluster = new MarkerClusterer(map, markersArrayWoodlandHills_Referral_Professional, { gridSize: 4, styles: [{ filteredurl: _iconRedCluster, url: _iconGreenCluster, height: 38, width: 32, backgroundPosition: "left bottom"}] });
                    }
                    else if (msa == "Woodland_Hills_Emergency_Hospital") {
                        markerCluster = new MarkerClusterer(map, markersArrayWoodlandHills_Emergency_Hospital, { gridSize: 4, styles: [{ filteredurl: _iconRedCluster, url: _iconGreenCluster, height: 38, width: 32, backgroundPosition: "left bottom"}] });
                    }
                    else if (msa == "Woodland_Hills_Referral_Hospital") {
                        markerCluster = new MarkerClusterer(map, markersArrayWoodlandHills_Referral_Hospital, { gridSize: 4, styles: [{ filteredurl: _iconRedCluster, url: _iconGreenCluster, height: 38, width: 32, backgroundPosition: "left bottom"}] });
                    }
                }
            }

            document.getElementById("agmap").style.display = "none";
        }
    </script>

    <style type="text/css">
        .floating
        {
	        /*WIDTH AND HEIGHT OF THE TOOLTIP*/
	        width:100px;
	        height:auto;       
	
	        /*THIS IS THE BORDER OF THE TOOLTIP*/
	        border-style:solid;
	        border-width:1px;
	        border-color:black;
	
	        /*BACKGROUND-COLOR AND TEXT-COLOR*/
	        background-color:#F4F4F4;
	        color:#333;
	        
	        /*FONT PROPERTIES*/
	        font-size:x-small;
	        text-align:left;
		
	        /*PADDING AND WORD-WRAPPING*/
	        padding: 15px 15px 15px 15px;
	        /*word-wrap:break-word;*/

	        /*DO NOT CHANGE*/
	        position:absolute;
	        display:none;
        }
    </style>
</head>
<body>
    <form id="form1" runat="server">
    <div id="MasterHeader" style="padding-top: 0px; padding-right: 0px;">
          <img alt="KP" class="style1" src="PVTCommon/images/kp_logo_thrive.jpg" height="46px" width="250px"/>&nbsp;
    </div>
    <center>
        <asp:ContentPlaceHolder ID="ContentPlaceHolder1" runat="server">
        </asp:ContentPlaceHolder>
    </center>
    <!--
    <div style="padding-top: 4px; float: left; text-align: left; font-size: x-small;">
                <asp:HyperLink ID="HyperLink1" runat="server" Font-Size="x-small"
                    NavigateUrl="~/GoogleMap.aspx" style="text-align: left" Target="_self" Font-Names="Verdana">Home</asp:HyperLink>
    </div>
    <p>
        &nbsp;</p>
     -->
    </form>
</body>
</html>
